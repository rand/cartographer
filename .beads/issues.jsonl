{"id":"cartographer-1","title":"Phase 1: Foundation - Complete MVP implementation","description":"","status":"open","priority":0,"issue_type":"epic","created_at":"2025-10-23T17:08:14.744497-07:00","updated_at":"2025-10-23T17:08:14.744497-07:00"}
{"id":"cartographer-10","title":"Create Claude Code slash command (/cartographer)","description":"","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-23T17:08:27.142001-07:00","updated_at":"2025-10-23T17:08:27.142001-07:00"}
{"id":"cartographer-11","title":"Style frontend with terminal-aesthetic design (inspired by codelift.space)","description":"","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-23T17:08:27.164482-07:00","updated_at":"2025-10-23T17:08:27.164482-07:00"}
{"id":"cartographer-2","title":"Scaffold Go project structure with cmd/, internal/, web/ directories","description":"","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-23T17:08:20.334096-07:00","updated_at":"2025-10-23T17:22:21.368131-07:00","closed_at":"2025-10-23T17:22:21.368131-07:00"}
{"id":"cartographer-3","title":"Setup HTTP server with health check endpoint at /health","description":"","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-23T17:08:20.357447-07:00","updated_at":"2025-10-23T17:22:27.948493-07:00","closed_at":"2025-10-23T17:22:27.948493-07:00"}
{"id":"cartographer-4","title":"Initialize SQLite database with projects and tasks tables","description":"","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-23T17:08:20.378497-07:00","updated_at":"2025-10-23T17:30:05.600145-07:00","closed_at":"2025-10-23T17:30:05.600145-07:00"}
{"id":"cartographer-5","title":"Create basic HTML page loading from Go server","description":"","status":"open","priority":0,"issue_type":"task","created_at":"2025-10-23T17:08:20.399012-07:00","updated_at":"2025-10-23T17:08:20.399012-07:00"}
{"id":"cartographer-6","title":"Implement domain models for Project, Task, Board","description":"","status":"open","priority":0,"issue_type":"task","created_at":"2025-10-23T17:08:20.420589-07:00","updated_at":"2025-10-23T17:08:20.420589-07:00"}
{"id":"cartographer-7","title":"Implement REST API endpoints for projects and tasks (GET/POST/PUT/DELETE)","description":"","status":"open","priority":0,"issue_type":"task","created_at":"2025-10-23T17:08:27.077314-07:00","updated_at":"2025-10-23T17:08:27.077314-07:00"}
{"id":"cartographer-8","title":"Integrate Beads framework - parse beads from Go project","description":"","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-23T17:08:27.09933-07:00","updated_at":"2025-10-23T17:08:27.09933-07:00"}
{"id":"cartographer-9","title":"Setup WebSocket endpoint for real-time updates","description":"","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-23T17:08:27.120915-07:00","updated_at":"2025-10-23T17:08:27.120915-07:00"}
